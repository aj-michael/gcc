group 'edu.rosehulman.minijavac'
version '0.0.1'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'de.jflex', name: 'jflex', version: '1.6.1'
        classpath group: 'com.github.vbmacher', name: 'java-cup', version: '11b'
    }
}

task generateLexer << {
    jflex.Main.generate(new File('src/main/flex/minijava.flex'))
}

task generateParser << {
    java_cup.Main.main(['src/main/cup/minijava.cup'] as String[])
}

task copyGenerated(type: Copy) {
    outputs.upToDateWhen { false }
    from 'src/main/flex'
    from '.'
    into 'src/main/java/edu/rosehulman/minijavac/generated'
    include '*.java'
}

task cleanGenerated(type: Delete) {
    delete fileTree('src/main/flex') {
        include '*.java'
    }
    delete fileTree('.') {
        include '*.java'
    }
}

task generate {
    dependsOn 'generateLexer'
    dependsOn 'generateParser'
    dependsOn 'copyGenerated'
    dependsOn 'cleanGenerated'
    tasks.findByName('generateParser').mustRunAfter 'generateLexer'
    tasks.findByName('copyGenerated').mustRunAfter 'generateParser'
    tasks.findByName('cleanGenerated').mustRunAfter 'copyGenerated'
}
compileJava.dependsOn generate

mainClassName = 'edu.rosehulman.minijavac.Main'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:19.0'
    compile 'com.github.vbmacher:java-cup-runtime:11b'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

jar {
    manifest {
        attributes 'Main-Class': "$mainClassName"
    }

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
